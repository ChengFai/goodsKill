management.security.enabled=false
management.endpoints.web.exposure.include=*
management.health.show-details=always

spring.cloud.stream.bindings.input.destination=seckill
spring.cloud.stream.bindings.output.destination=seckill-result
spring.cloud.stream.bindings.seckill-mongo-save-produce.destination=seckill-mongo-save

##避免kafka连接不上时一直输出警告
logging.level.org.apache.kafka=error

##分库分表配置
#分表
spring.shardingsphere.sharding.tables.success_killed.actual-data-nodes=ds$->{0..1}.success_killed_$->{0..1}
spring.shardingsphere.sharding.tables.success_killed.table-strategy.inline.sharding-column=user_phone
spring.shardingsphere.sharding.tables.success_killed.table-strategy.inline.algorithm-expression=success_killed_$->{user_phone.toLong() % 2}
#spring.shardingsphere.sharding.tables.success_killed.key-generator.column=order_id
#spring.shardingsphere.sharding.tables.success_killed.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.binding-tables=success_killed
#spring.shardingsphere.sharding.broadcast-tables=t_config
#分库
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=seckill_id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{seckill_id % 2}
